using System;
using System.IO;
using UnityEditor;
using UnityEngine;

namespace Codeplay
{
	public class SceneShortcutGenerator
	{
		private const string FOLDER_LOCATION = "Editor/AutoGenerated/";
		private const string NAMESPACE = "Codeplay";
		private const string CLASS_FILE_NAME = "SceneShortCuts.cs";
		private const string MENU_NAME = "Codeplay";

		[MenuItem("Codeplay/Project/Generate Scene Shortcuts...")]
		public static void GenerateSceneShortcutsMenuItem()
		{
			GenerateSceneShortcuts();
		}

		public static void GenerateSceneShortcuts()
		{
			var folderPath = Application.dataPath + "/" + FOLDER_LOCATION;
			if (!Directory.Exists(folderPath))
				Directory.CreateDirectory(folderPath);

			File.WriteAllText(folderPath + CLASS_FILE_NAME,
					GetClassContent(CLASS_FILE_NAME.Replace(".cs", string.Empty), EditorBuildSettings.scenes));
			AssetDatabase.ImportAsset("Assets/" + FOLDER_LOCATION + CLASS_FILE_NAME, ImportAssetOptions.ForceUpdate);

			Debug.Log("Generate scene shortcuts complete. Editor class built to " + FOLDER_LOCATION);
		}

		private static string GetClassContent(string className, EditorBuildSettingsScene[] scenes)
		{
			var output = "";
			output += "//This class is auto-generated do not modify\n";
			output += "using UnityEditor;\n\n";
			output += "namespace " + NAMESPACE + "\n";
			output += "{\n";
			output += "\tpublic class " + className + " : UnityEditor.Editor \n";
			output += "\t{\n\n";

			for (var n = 0; n < scenes.Length; n++)
			{
				var scenePath = scenes[n].path;
				var sceneName = System.IO.Path.GetFileNameWithoutExtension(scenes[n].path);
				output += BuildOpenSceneMenuItem(sceneName, scenePath) + "\n";
			}

			output += "\t}\n";
			output += "}";

			return output;
		}

		private static string BuildOpenSceneMenuItem(string sceneName, string scenePath)
		{
			var output = "";
			output += "\t\t[MenuItem(\"" + MENU_NAME + "/Open Scene/" + sceneName + "\")]\n";
			output += "\t\tpublic static void OpenScene" + sceneName + "()\n";
			output += "\t\t{\n";
			output += "\t\t\tEditorApplication.OpenScene(\"" + scenePath + "\");\n";
			output += "\t\t}\n";
			return output;
		}
	}
}